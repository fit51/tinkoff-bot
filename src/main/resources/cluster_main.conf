app {
  #milliseconds
  updateRatesInterval = 2000
}
akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  #ERROR,WARNING,INFO,DEBUG
  #loglevel = "INFO"
  #stdout-loglevel = "INFO"
  log-config-on-start = off

  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
    guardian-supervisor-strategy = "akka.actor.DefaultSupervisorStrategy"
    #serialize-creators = on
    warn-about-java-serializer-usage = off

    deployment {

      /sessionrouter {
        router = consistent-hashing-pool
        nr-of-instances = 5
        virtual-nodes-factor = 10

        cluster {
          enabled = on
          allow-local-routees = off
          maxInstancesPerNode = 1
          use-role = worker
        }
      }

      /nosessionrouter {
        router = round-robin-pool

        cluster {
          enabled = on
          allow-local-routees = off
          maxInstancesPerNode = 1
          use-role = worker
        }
      }

    }

  }

  remote {
    enabled-transports = ["akka.remote.netty.tcp"]
    log-remote-lifecycle-events = on
    netty.tcp {
      hostname = "127.0.0.1"
      hostname = ${?HOST}
      port = 2551
      port = ${?PORT}
    }
  }

  cluster {
    seed-nodes = [
      "akka.tcp://botsystem@127.0.0.1:2551",
      "akka.tcp://botsystem@127.0.0.1:2552",
      "akka.tcp://botsystem@127.0.0.1:2553"
    ]
    roles = ["master"]
    auto-down-unreachable-after = 15s
    auto-down = off

    role {
      master.min-nr-of-members = 1
      worker.min-nr-of-members = 2
    }

    singleton {
      hand-over-retry-interval = 1s
    }
  }
}